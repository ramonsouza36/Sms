@page "/courses"

@using SchoolManagerSystem.Models;
@using SchoolManagerSystem.Data;
@using System.Linq;
@using Microsoft.EntityFrameworkCore;
@inject IDbContextFactory<ApplicationDbContext> DbFactory

<div>
    <a href="coursesadd" class="btn btn-primary active mb-3 text-center" role="button" data-bs-toggle="button" aria-pressed="true">
        <i class="fas fa-plus"> Adicionar</i>
    </a>
</div>
<div class="container-fluid">
    <div class="row col-md-12 d-md-inline-flex">
        <table class="table table-striped table-hover">
            <tr>
                <th>Nome</th>
                <th>Email</th>
                <th>Opções</th>
            </tr>
            @if (course is not null)
            {
                foreach(var item in course)
                {
                    <tr>
                        <td>@item.Name</td>
                        <td>@item.Price</td>
                        <td></td>
                    </tr>
                }
            }
        </table>
    </div>
</div>


@code{

List<Course>? course { get; set;}


    protected override async Task OnInitializedAsync()
    {
        await GetCourses();
    }

    public async Task<List<Course>> GetCourses()
    {
        using var context = DbFactory.CreateDbContext();
        course = await context.Course.Where(i => i.Id != Guid.Empty).ToListAsync();
        Console.WriteLine($"{course!.FirstOrDefault()!.Name}");
        return course;
    }
}