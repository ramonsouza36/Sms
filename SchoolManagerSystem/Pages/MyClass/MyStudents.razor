@page "/mystudents/{id:guid}"
@using SchoolManagerSystem.Data;
@using SchoolManagerSystem.Services;
@using SchoolManagerSystem.Models;
@using System.Linq;
@using Microsoft.EntityFrameworkCore;
@using SchoolManagerSystem.Pages.Components
@inject IDbContextFactory<ApplicationDbContext> DbFactory
@inject ClassStudentService ClassStudentService;
@inject InstructorsService InstructorsService;
@inject PlateService PlateService;
@inject NavigationManager navManager;
@inject AuthenticationStateProvider GetAuthenticationStateAsync;

<div class="container-fluid ps-0">
    <h3>Meus Alunos</h3>
</div>
<div class="container-fluid">
    <div class="row col-md-12 d-md-inline-flex">
        <table class="table table-striped table-hover">
            <thead>
                <tr>
                    <th>Nome do Aluno</th>
                    <th>Data de Matrícula</th>
                    <th>
                        <div class="divBotoes">
                            Opções
                        </div>
                    </th>
                </tr>
            </thead>
            <tbody>
                @if (plates is not null)
                {
                    foreach(var item in plates)
                    {
                        <tr>
                            <td>@item.NameStudent</td>
                            <td>@item.PlateDate</td>
                            <td>
                                <div class="divBotoes">
                                    <a title="Editar" class="btn btn-secondary text-center" role="button" data-bs-toggle="button" aria-pressed="true">
                                        <i class="fas fa-eye"></i>
                                    </a>
                                    <a title="Excluir" class="btn btn-danger text-center" role="button" data-bs-toggle="button" aria-pressed="true">
                                        <i class="fas fa-trash-alt"></i>
                                    </a>
                                </div>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>
@code{
    [Parameter]
    public Guid? id { get; set; }
    public List<Plate>? plates { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        plates = await PlateService.GetPlateAsync(DbFactory);
        plates = plates.Where(p => p.ClassStudentId == id).ToList();
    }

    public void showStudents(Guid id)
    {
       navManager.NavigateTo($"/mystudents/{id}"); 
    }
}
