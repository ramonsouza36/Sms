@using Microsoft.AspNetCore.Identity;
@inherits LayoutComponentBase
@inject NavigationManager navManager;
@inject UserManager<IdentityUser> userManager;

<PageTitle>Sms</PageTitle>

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4">
            <AuthorizeView>
                <Authorized>
                    Hello, @context?.User?.Identity?.Name
                    <div class="dropdown ms-2">
                        <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" 
                        aria-haspopup="true" aria-expanded="false" @onclick = "(() => ChangeVisibility())">
                        Opções
                        </button>
                        <div class="dropdown-menu @visibility" aria-labelledby="dropdownMenuButton">
                            <a class="dropdown-item ms-0" @onclick="(() => editUser(context?.User?.Identity?.Name))"><i class="fas fa-pencil-alt"> Editar</i></a>
                            <a class="dropdown-item ms-0" href="/Logout"><i class="fas fa-sign-out-alt">Logout</i></a>
                        </div>
                    </div>
                </Authorized>
                <NotAuthorized>
                    @{navManager.NavigateTo($"Login", true);}
                </NotAuthorized>
            </AuthorizeView>
        </div>
        <article class="content px-4">
            @Body
        </article>
    </main>
</div>
@code{
    public string visibility = "d-none";

    private void ChangeVisibility()
    {
        if(visibility == "d-none")
            visibility = "d-grid";
        else
            visibility  = "d-none";
    }

    private async void editUser(string UserName)
    {
       var user = await userManager.FindByNameAsync(UserName);
       navManager.NavigateTo($"/myuser/{user.Id}");
    }
}
